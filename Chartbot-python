from datetime import datetime
import pytz

def convert_to_local_datetime(date_string):
    """Convert a date string to LocalDateTime."""
    # Define the timezone mapping
    timezone_mapping = {
        'IST': 'Asia/Kolkata',  # Indian Standard Time
        # Add more mappings if needed
    }
    
    # Extract the timezone abbreviation (last 3 letters)
    tz_abbr = date_string.split()[-1]
    local_tz = timezone_mapping.get(tz_abbr, 'UTC')  # Default to UTC if not found

    # Parse the date string without the timezone
    naive_datetime = datetime.strptime(date_string[:-4].strip(), "%Y-%m-%d %H:%M:%S")

    # Localize the naive datetime to the specific timezone
    localized_datetime = pytz.timezone(local_tz).localize(naive_datetime)

    return localized_datetime

# Example usage
date_string = "2023-03-09 23:07:58 IST"
local_datetime = convert_to_local_datetime(date_string)
print("LocalDateTime:", local_datetime)
